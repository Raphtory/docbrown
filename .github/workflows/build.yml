on: [push]

name: CI

jobs:
  check: # checks for errors
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: '${{ runner.os }}-cargo-registry-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: '${{ runner.os }}-cargo-index-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
  test:
    name: Testing on multiple platforms
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: ubuntu-latest
          - os: windows-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: '${{ runner.os }}-cargo-registry-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: '${{ runner.os }}-cargo-index-${{ hashFiles(''**/Cargo.lock'') }}'
      - uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        name: Setup Rust
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Build project quietly
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -q
      - name: Run Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features
      - name: Run benchmark
        run: |
          set -o pipefail
          cargo bench --bench base -- --output-format=bencher | tee benchmark-result.txt
      - name: Download previous benchmark results
        id: restore-benchmark-cache
        uses: actions/cache/restore@v3
        with:
          path: ./benchmark-cache
          key: ${{ runner.os }}-benchmark
      - name: Check benchmark results
        if: github.ref != 'refs/heads/main'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'cargo'
          output-file-path: benchmark-result.txt
          external-data-json-path: ./benchmark-cache/benchmark-result.json
          fail-on-alert: true
      - name: Generate benchmark results
        if: github.ref == 'refs/heads/main'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'cargo'
          output-file-path: benchmark-result.txt
          external-data-json-path: ./benchmark-cache/benchmark-result.json
      - name: Save benchmark results
        if: github.ref == 'refs/heads/main'
        uses: actions/cache/save@v3
        with:
          path: ./benchmark-cache
          key: ${{ steps.restore-benchmark-cache.outputs.cache-primary-key }}
