on: [push]

name: CI

jobs:
  build_and_test:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout
      - uses: actions-rs/toolchain@v1
        name: Setup Rust
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/debug
            target/release
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Build project quietly
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -q
      - name: Run Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Run benchmark
        run: cargo bench --bench base -- --output-format=bencher | tee benchmark-result.txt
      - name: Download previous benchmark results
        id: restore-benchmark-cache
        uses: actions/cache/restore@v3
        with:
         path: ./benchmark-cache
         key: ${{ runner.os }}-benchmark
      - name: Compare benchmark results
        uses: benchmark-action/github-action-benchmark@v1
        if: github.ref != 'refs/heads/main'
        with:
          tool: 'cargo'
          output-file-path: benchmark-result.txt
          external-data-json-path: ./benchmark-cache/benchmark-result.json
          fail-on-alert: true
      - name:  Is data file present
        run: ls ./benchmark-cache
      - name: Save benchmark results from main branch
        uses: actions/cache/save@v3
        # if: github.ref == 'refs/heads/main'
        with:
          path: ./benchmark-cache
          key: ${{ steps.restore-benchmark-cache.outputs.cache-primary-key }}
#        with:
#          tool: 'cargo'
#          output-file-path: benchmark-result.txt
#          external-data-json-path: ./benchmark-cache/benchmark-result.json
#          save-data-file: true
